<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 钉钉授权企业信息 -->
<mapper namespace="com.ikamobile.pa.dao.DdAuthCorpDao">
    
    <sql id="pager">
        <if test="pager != null">
            limit ${pager.pageSize} offset ${pager.offset}
        </if>
    </sql>

    <sql id="criteriaQueryWhere">
        <if test="criterias != null">
            <where>
                <foreach collection="criterias" item="criteria" separator="OR">
                    <if test="criteria.valid">
                        <trim prefix="(" suffix=")" prefixOverrides="AND">
                            <foreach collection="criteria.criterions" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        AND ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        AND ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        AND ${criterion.condition} #{criterion.value} AND #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        AND ${criterion.condition}
                                        <foreach collection="criterion.value" item="listItem"
                                            open="(" close=")" separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </where>
        </if>
    </sql>
    <resultMap id="DdAuthCorp" type="com.ikamobile.pa.dao.model.DdAuthCorp">
        <id column="id" property="id" />
        <result column="corp_id" property="corpId" />
        <result column="corp_name" property="corpName" />
        <result column="industry" property="industry" />
        <result column="authenticated" property="authenticated" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    <!-- 如果使用自定义主键，则使用如下被注释掉部分作为insert开始节点 -->
    <!-- <insert id="insert" parameterType="java.lang.Object"> -->
    <insert id="insert" parameterType="java.lang.Object">

    <selectKey keyProperty="id" resultType="String" order="BEFORE">
        select  uuid() from dual
    </selectKey>
    INSERT INTO dd_auth_corp
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            corp_id,
            corp_name,
            industry,
            authenticated,
            create_time,
            update_time,
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{id},
            #{corpId},
            #{corpName},
            #{industry},
            #{authenticated},
            #{createTime},
            #{updateTime},
        </trim>
    </insert>
    <!-- 如果使用自定义主键，则使用如下被注释掉部分作为insertSelective开始节点 -->
    <!-- <insert id="insertSelective" parameterType="java.lang.Object"> -->
    <insert id="insertSelective" parameterType="java.lang.Object">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select  uuid() from dual
        </selectKey>
        INSERT INTO dd_auth_corp
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
            id,
            </if>
            <if test="corpId != null">
            corp_id,
            </if>
            <if test="corpName != null">
            corp_name,
            </if>
            <if test="industry != null">
            industry,
            </if>
            <if test="authenticated != null">
            authenticated,
            </if>
            <if test="createTime != null">
            create_time,
            </if>
            <if test="updateTime != null">
            update_time,
            </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="id != null">
            #{id},
            </if>
            <if test="corpId != null">
            #{corpId},
            </if>
            <if test="corpName != null">
            #{corpName},
            </if>
            <if test="industry != null">
            #{industry},
            </if>
            <if test="authenticated != null">
            #{authenticated},
            </if>
            <if test="createTime != null">
            #{createTime},
            </if>
            <if test="updateTime != null">
            #{updateTime},
            </if>
        </trim>
    </insert>
    <sql id="targetSet">
        <set>
            id = #{target.id},
            corp_id = #{target.corpId},
            corp_name = #{target.corpName},
            industry = #{target.industry},
            authenticated = #{target.authenticated},
            create_time = #{target.createTime},
            update_time = #{target.updateTime},
        </set>
    </sql>
    <sql id="set">
        <set>
            id = #{id},
            corp_id = #{corpId},
            corp_name = #{corpName},
            industry = #{industry},
            authenticated = #{authenticated},
            create_time = #{createTime},
            update_time = #{updateTime},
        </set>
    </sql>
    <sql id="selectiveSet">
        <set>
            <if test="target.id != null">
            id = #{target.id},
            </if>
            <if test="target.corpId != null">
            corp_id = #{target.corpId},
            </if>
            <if test="target.corpName != null">
            corp_name = #{target.corpName},
            </if>
            <if test="target.industry != null">
            industry = #{target.industry},
            </if>
            <if test="target.authenticated != null">
            authenticated = #{target.authenticated},
            </if>
            <if test="target.createTime != null">
            create_time = #{target.createTime},
            </if>
            <if test="target.updateTime != null">
            update_time = #{target.updateTime},
            </if>
        </set>
    </sql>
    <select id="countByCriteriaQuery" parameterType="com.ikamobile.pa.dao.query.CriteriaQuery"
        resultType="java.lang.Long">
        SELECT COUNT(*) FROM dd_auth_corp
        <include refid="criteriaQueryWhere" />
    </select>
    <select id="selectByCriteriaQuery" resultMap="DdAuthCorp"
        parameterType="com.ikamobile.pa.dao.query.CriteriaQuery">
        SELECT
        <if test="distinct">
            DISTINCT
        </if>
        'true' as QUERYID,
        dd_auth_corp.*
        FROM dd_auth_corp
        <include refid="criteriaQueryWhere" />
        <if test="sorts != null">
            <trim prefix="ORDER BY ">
            <foreach collection="sorts" item="sort" separator=",">
                ${sort.field} ${sort.direction}
            </foreach>
            </trim>
        </if>
        <include refid="pager" />
    </select>
    <select id="selectOneByCriteriaQuery" resultMap="DdAuthCorp"
            parameterType="com.ikamobile.pa.dao.query.CriteriaQuery">
        SELECT
        <if test="distinct">
            DISTINCT
        </if>
        'true' as QUERYID,
        dd_auth_corp.*
        FROM dd_auth_corp
        <include refid="criteriaQueryWhere" />
        <if test="sorts != null">
            <trim prefix="ORDER BY ">
                <foreach collection="sorts" item="sort" separator=",">
                    ${sort.field} ${sort.direction}
                </foreach>
            </trim>
        </if>
        <include refid="pager" />
    </select>
    <select id="selectById" resultMap="DdAuthCorp" parameterType="java.lang.Integer">
        SELECT
        dd_auth_corp.*
        FROM dd_auth_corp
        WHERE id = #{_parameter}
    </select>
    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM dd_auth_corp
        WHERE id = #{_parameter}
    </delete>
    <delete id="deleteByCriteriaQuery" parameterType="com.ikamobile.pa.dao.param.DeleteByCriteriaQueryParam">
        DELETE FROM dd_auth_corp
        <include refid="criteriaQueryWhere" />
    </delete>
    <update id="updateByCriteriaQuerySelective" parameterType="com.ikamobile.pa.dao.param.UpdateByCriteriaQueryParam">
        UPDATE dd_auth_corp
        <include refid="selectiveSet" />
        <include refid="criteriaQueryWhere" />
    </update>
    <update id="updateByCriteriaQuery" parameterType="com.ikamobile.pa.dao.param.UpdateByCriteriaQueryParam">
        UPDATE dd_auth_corp
        <include refid="targetSet" />
        <include refid="criteriaQueryWhere" />
    </update>
    <update id="updateByIdSelective" parameterType="java.lang.Object">
        UPDATE dd_auth_corp
        <include refid="selectiveSet"/>
        WHERE id = #{id}
    </update>
    <update id="updateById" parameterType="java.lang.Object">
        UPDATE dd_auth_corp
        <include refid="set"/>
        WHERE id = #{id}
    </update>
</mapper>