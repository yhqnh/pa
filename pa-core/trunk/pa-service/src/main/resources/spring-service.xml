<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jms
                           http://www.springframework.org/schema/jms/spring-jms.xsd
                           http://www.springframework.org/schema/aop
         				   http://www.springframework.org/schema/aop/spring-aop.xsd
     					   http://www.springframework.org/schema/tx
        				   http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <import resource="spring-dao.xml" />

    <context:annotation-config />

    <aop:aspectj-autoproxy />

    <context:component-scan base-package="com.ikamobile.pa" />

    <cache:annotation-driven cache-manager="cacheManager" />

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:spring-service.properties"/>
    </bean>

    <bean id="thriftServer1" class="com.ikamobile.ikasoa.core.thrift.server.impl.DefaultThriftServerImpl" init-method="run" destroy-method="stop">
        <property name="serverName" value="PaThriftServer" /><!-- 服务名称 -->
        <property name="serverPort" value="${pa.thrift.server.port}" /><!-- 服务端口 -->
        <property name="thriftServerConfiguration">
            <bean class="com.ikamobile.ikasoa.core.thrift.server.ThriftServerConfiguration">
                <property name="transportFactory"><!-- 指定传输协议工厂(可选,默认为TFramedTransport.Factory) -->
                    <bean class="org.apache.thrift.transport.TTransportFactory" />
                </property>
            </bean>
        </property>
        <property name="processor">
            <bean class="com.ikamobile.ikasoa.core.thrift.server.MultiplexedProcessor">
                <constructor-arg>
                    <map>
                        <entry key="OrderService"><!-- 这里的key可以随便取,保证唯一就行.Client调用的时候需要用 -->
                            <bean class="com.ikamobile.pa.thrift.server.acceptor.ThriftOrderService.Processor"><!-- ThriftService1和ThriftService2为通过idl生成的服务类 -->
                                <constructor-arg ref="orderServiceImpl" />
                            </bean>
                        </entry>
                        <entry key="UserThriftService">
                            <bean class="com.ikamobile.pa.thrift.server.acceptor.UserThriftService.Processor">
                                <constructor-arg ref="userServiceImpl" />
                            </bean>
                        </entry>
                        <entry key="VerityCodeThriftService">
                            <bean class="com.ikamobile.pa.thrift.server.acceptor.VerityCodeThriftService.Processor">
                                <constructor-arg ref="verityCodeServiceImpl" />
                            </bean>
                        </entry>
                        <entry key="VehicleTrafficThriftService">
                            <bean class="com.ikamobile.pa.thrift.server.acceptor.VehicleTrafficThriftService.Processor">
                                <constructor-arg ref="vehicleTrafficServiceImpl" />
                            </bean>
                        </entry>
                        <entry key="ShiroThriftService">
                            <bean class="com.ikamobile.pa.thrift.server.acceptor.ShiroThriftService.Processor">
                                <constructor-arg ref="shiroServiceImpl" />
                            </bean>
                        </entry>
                        <entry key="VehicleThriftService">
                            <bean class="com.ikamobile.pa.thrift.server.acceptor.VehicleThriftService.Processor">
                                <constructor-arg ref="vehicleServiceImpl" />
                            </bean>
                        </entry>
                        <entry key="TaskService">
                            <bean class="com.ikamobile.pa.thrift.server.acceptor.TaskThriftService.Processor">
                                <constructor-arg ref="taskServiceImpl" />
                            </bean>
                        </entry>
                        <entry key="PositionService">
                            <bean class="com.ikamobile.pa.thrift.server.acceptor.PositionThriftService.Processor">
                                <constructor-arg ref="positionServiceImpl" />
                            </bean>
                        </entry>
                        <entry key="DriverThriftService">
                            <bean class="com.ikamobile.pa.thrift.server.acceptor.DriverThriftService.Processor">
                                <constructor-arg ref="driverServiceImpl" />
                            </bean>
                        </entry>
                        <entry key="DispatcherThriftService">
                            <bean class="com.ikamobile.pa.thrift.server.acceptor.DispatcherThriftService.Processor">
                                <constructor-arg ref="dispatcherServiceImpl" />
                            </bean>
                        </entry>
                    </map>
                </constructor-arg>
            </bean>
        </property>
    </bean>


    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${pa.sms.broken.url}"/>
        <property name="userName" value="${pa.sms.broken.username}"/>
        <property name="password"  value="${pa.sms.broken.password}"/>
     </bean>
    <bean id="jmsConnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="targetConnectionFactory" ref="targetConnectionFactory"></property>
    </bean>

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>
</beans>